require('dotenv').config();
const ethers = require('ethers');
const minerHelper = require('./helpers/MinerHelper');
const etherHelper = require('./helpers/EthersHelper');
const abi = require('erc-20-abi');

//initialize RPCs(providers)
const ftmRPC = new ethers.providers.JsonRpcProvider(process.env.FTM_RPC_URL);
const maticRPC = new ethers.providers.JsonRpcProvider(process.env.POLYGON_RPC_URL);
const avaxRPC = new ethers.providers.JsonRpcProvider(process.env.AVAX_RPC_URL);
const bnbRPC = new ethers.providers.JsonRpcProvider(process.env.BNB_RPC_URL);
//initialize wallets, cant think of a better way to do this
const ethersWallet = [
	new ethers.Wallet(process.env.PKEY_three, maticRPC),
	new ethers.Wallet(process.env.PKEY_two, maticRPC),
	new ethers.Wallet(process.env.PKEY_two, avaxRPC),
	new ethers.Wallet(process.env.PKEY_two, ftmRPC),
	new ethers.Wallet(process.env.PKEY_two, bnbRPC),
]
//smartcontract ABIs
const MULTI_MINER_ABI = [{ "constant": true, "inputs": [], "name": "ceoAddress", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getMyMiners", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getBalance", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "initialized", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "rt", "type": "uint256" }, { "name": "rs", "type": "uint256" }, { "name": "bs", "type": "uint256" }], "name": "calculateTrade", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "eth", "type": "uint256" }, { "name": "contractBalance", "type": "uint256" }], "name": "calculateEggBuy", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "marketEggs", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [], "name": "sellEggs", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "amount", "type": "uint256" }], "name": "devFee", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "pure", "type": "function" }, { "constant": false, "inputs": [], "name": "seedMarket", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": false, "inputs": [{ "name": "ref", "type": "address" }], "name": "hatchEggs", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getMyEggs", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "lastHatch", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "claimedEggs", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "hatcheryMiners", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "EGGS_TO_HATCH_1MINERS", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "eth", "type": "uint256" }], "name": "calculateEggBuySimple", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "eggs", "type": "uint256" }], "name": "calculateEggSell", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "referrals", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "ceoAddress2", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "adr", "type": "address" }], "name": "getEggsSinceLastHatch", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "ref", "type": "address" }], "name": "buyEggs", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }]
const TOASTED_AVAX_ABI = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }], "name": "OwnershipTransferred", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "beanRewards", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }], "name": "buyEggs", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }, { "internalType": "uint256", "name": "contractBalance", "type": "uint256" }], "name": "calculateEggBuy", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }], "name": "calculateEggBuySimple", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eggs", "type": "uint256" }], "name": "calculateEggSell", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "fund", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "getBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getEggsSinceLastHatch", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getMyEggs", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getMyMiners", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }], "name": "getReferredMiners", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }], "name": "hatchEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "seedMarket", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "sellEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bool", "name": "newVal", "type": "bool" }], "name": "setInitialized", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bool", "name": "newVal", "type": "bool" }], "name": "setOpen", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_dailyReward", "type": "uint256" }], "name": "updateDailyReward", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_devFeeVal", "type": "uint256" }], "name": "updateDevFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address payable", "name": "_recAdd", "type": "address" }], "name": "updateRecAddr", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_refFee", "type": "uint256" }], "name": "updateRefFee", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]
const BAKED_BEANS_ABI = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }], "name": "OwnershipTransferred", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "beanRewards", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }], "name": "buyEggs", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }, { "internalType": "uint256", "name": "contractBalance", "type": "uint256" }], "name": "calculateEggBuy", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }], "name": "calculateEggBuySimple", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "eggs", "type": "uint256" }], "name": "calculateEggSell", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getEggsSinceLastHatch", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getMyEggs", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getMyMiners", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }], "name": "hatchEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "seedMarket", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "sellEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]
const ELK_OF_FORTUNE_ABI = [{ "inputs": [{ "internalType": "address", "name": "erc20Token", "type": "address" }, { "internalType": "addresspayable", "name": "_project", "type": "address" }, { "internalType": "addresspayable", "name": "_partner", "type": "address" }, { "internalType": "addresspayable", "name": "_marketing", "type": "address" }, { "internalType": "addresspayable", "name": "_buyback", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "winner", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "pot", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "round", "type": "uint256" }], "name": "LotteryWinner", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "winner", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "pot", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "depositAmount", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "round", "type": "uint256" }], "name": "MaxDepositorWinner", "type": "event" }, { "inputs": [], "name": "BUYBACK", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "COMPOUND_BONUS", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "COMPOUND_BONUS_MAX_TIMES", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "COMPOUND_STEP", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "CUTOFF_STEP", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "EGGS_TO_HIRE_1MINERS", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "EGGS_TO_HIRE_1MINERS_COMPOUND", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_ACTIVATED", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_MAX_DEPOSITOR_PERCENT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_PERCENT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_START_TIME", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_STEP", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "LOTTERY_TICKET_PRICE", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "MARKETING", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "MARKET_EGGS_DIVISOR", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "MAX_LOTTERY_TICKET_COMPOUND", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "MAX_LOTTERY_TICKET_DEPOSIT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "MIN_INVEST", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "PARTNER", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "PERCENTS_DIVIDER", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "PROJECT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "REFERRAL", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "WALLET_DEPOSIT_LIMIT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "WITHDRAWAL_TAX", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "WITHDRAWAL_TAX_DAYS", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "WITHDRAW_COOLDOWN", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "WITHDRAW_LIMIT", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "buyback", "outputs": [{ "internalType": "addresspayable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "contractStarted", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "lotteries", "outputs": [{ "internalType": "uint256", "name": "round", "type": "uint256" }, { "internalType": "address", "name": "lotteryWinner", "type": "address" }, { "internalType": "address", "name": "maxDepositWinner", "type": "address" }, { "internalType": "uint256", "name": "lotteryPot", "type": "uint256" }, { "internalType": "uint256", "name": "maxDepositorPot", "type": "uint256" }, { "internalType": "uint256", "name": "totalParticipants", "type": "uint256" }, { "internalType": "uint256", "name": "totalTickets", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }], "name": "lotteryParticipants", "outputs": [{ "internalType": "address", "name": "addr", "type": "address" }, { "internalType": "uint256", "name": "depositTickets", "type": "uint256" }, { "internalType": "uint256", "name": "compoundTickets", "type": "uint256" }, { "internalType": "uint256", "name": "totalTickets", "type": "uint256" }, { "internalType": "uint256", "name": "depositAmount", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "lotteryRound", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "marketEggs", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "marketing", "outputs": [{ "internalType": "addresspayable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "addresspayable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "partner", "outputs": [{ "internalType": "addresspayable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "project", "outputs": [{ "internalType": "addresspayable", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "token", "outputs": [{ "internalType": "contractIERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalCompound", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalDeposits", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalLotteryBonus", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalRefBonus", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalStaked", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "totalWithdrawn", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "users", "outputs": [{ "internalType": "uint256", "name": "initialDeposit", "type": "uint256" }, { "internalType": "uint256", "name": "userDeposit", "type": "uint256" }, { "internalType": "uint256", "name": "miners", "type": "uint256" }, { "internalType": "uint256", "name": "claimedEggs", "type": "uint256" }, { "internalType": "uint256", "name": "totalLotteryBonus", "type": "uint256" }, { "internalType": "uint256", "name": "lastHatch", "type": "uint256" }, { "internalType": "address", "name": "referrer", "type": "address" }, { "internalType": "uint256", "name": "referralsCount", "type": "uint256" }, { "internalType": "uint256", "name": "referralEggRewards", "type": "uint256" }, { "internalType": "uint256", "name": "totalWithdrawn", "type": "uint256" }, { "internalType": "uint256", "name": "dailyCompoundBonus", "type": "uint256" }, { "internalType": "uint256", "name": "withdrawCount", "type": "uint256" }, { "internalType": "uint256", "name": "lastWithdrawTime", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "startContract", "outputs": [], "stateMutability": "payable", "type": "function", "payable": true }, { "inputs": [], "name": "fundContract", "outputs": [], "stateMutability": "payable", "type": "function", "payable": true }, { "inputs": [{ "internalType": "bool", "name": "isCompound", "type": "bool" }], "name": "hatchEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "sellEggs", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "ref", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "buyEggs", "outputs": [], "stateMutability": "payable", "type": "function", "payable": true }, { "inputs": [{ "internalType": "uint256", "name": "eggValue", "type": "uint256" }], "name": "getFees", "outputs": [{ "internalType": "uint256", "name": "_projectFee", "type": "uint256" }, { "internalType": "uint256", "name": "_partnerFee", "type": "uint256" }, { "internalType": "uint256", "name": "_marketingFee", "type": "uint256" }, { "internalType": "uint256", "name": "_buybackFee", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "chooseWinners", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "chooseLotteryWinner", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "chooseMaxDepositor", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "getLargestDepositor", "outputs": [{ "internalType": "uint256", "name": "maxDeposit", "type": "uint256" }, { "internalType": "address", "name": "maxDepositor", "type": "address" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "_adr", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "getDailyCompoundBonus", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "round", "type": "uint256" }], "name": "getLotteryHistory", "outputs": [{ "internalType": "address", "name": "lotteryWinner", "type": "address" }, { "internalType": "address", "name": "maxDepositWinner", "type": "address" }, { "internalType": "uint256", "name": "lotteryPot", "type": "uint256" }, { "internalType": "uint256", "name": "maxDepositorPot", "type": "uint256" }, { "internalType": "uint256", "name": "totalParticipants", "type": "uint256" }, { "internalType": "uint256", "name": "totalTickets", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getLotteryInfo", "outputs": [{ "internalType": "uint256", "name": "round", "type": "uint256" }, { "internalType": "uint256", "name": "startTime", "type": "uint256" }, { "internalType": "uint256", "name": "step", "type": "uint256" }, { "internalType": "uint256", "name": "ticketPrice", "type": "uint256" }, { "internalType": "uint256", "name": "maxDepositTicket", "type": "uint256" }, { "internalType": "uint256", "name": "maxCompoundTicket", "type": "uint256" }, { "internalType": "uint256", "name": "lotteryPercent", "type": "uint256" }, { "internalType": "uint256", "name": "maxDepositorPercent", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "_adr", "type": "address" }], "name": "getUserInfo", "outputs": [{ "internalType": "uint256", "name": "_initialDeposit", "type": "uint256" }, { "internalType": "uint256", "name": "_userDeposit", "type": "uint256" }, { "internalType": "uint256", "name": "_miners", "type": "uint256" }, { "internalType": "uint256", "name": "_claimedEggs", "type": "uint256" }, { "internalType": "uint256", "name": "_totalLotteryBonus", "type": "uint256" }, { "internalType": "uint256", "name": "_lastHatch", "type": "uint256" }, { "internalType": "address", "name": "_referrer", "type": "address" }, { "internalType": "uint256", "name": "_referrals", "type": "uint256" }, { "internalType": "uint256", "name": "_totalWithdrawn", "type": "uint256" }, { "internalType": "uint256", "name": "_referralEggRewards", "type": "uint256" }, { "internalType": "uint256", "name": "_dailyCompoundBonus", "type": "uint256" }, { "internalType": "uint256", "name": "_lastWithdrawTime", "type": "uint256" }, { "internalType": "uint256", "name": "_withdrawCount", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getTimeStamp", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "_userAddress", "type": "address" }], "name": "getUserTickets", "outputs": [{ "internalType": "uint256", "name": "compound", "type": "uint256" }, { "internalType": "uint256", "name": "deposit", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getLotteryTimer", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "round", "type": "uint256" }], "name": "getLotteryParticipants", "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "_adr", "type": "address" }], "name": "getAvailableEarnings", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "rt", "type": "uint256" }, { "internalType": "uint256", "name": "rs", "type": "uint256" }, { "internalType": "uint256", "name": "bs", "type": "uint256" }], "name": "calculateTrade", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "eggs", "type": "uint256" }], "name": "calculateEggSell", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }, { "internalType": "uint256", "name": "contractBalance", "type": "uint256" }], "name": "calculateEggBuy", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "eth", "type": "uint256" }], "name": "calculateEggBuySimple", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "getEggsYield", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "uint256", "name": "eggs", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "calculateEggSellForYield", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getSiteInfo", "outputs": [{ "internalType": "uint256", "name": "_totalStaked", "type": "uint256" }, { "internalType": "uint256", "name": "_totalDeposits", "type": "uint256" }, { "internalType": "uint256", "name": "_totalCompound", "type": "uint256" }, { "internalType": "uint256", "name": "_totalRefBonus", "type": "uint256" }, { "internalType": "uint256", "name": "_totalLotteryBonus", "type": "uint256" }, { "internalType": "uint256", "name": "_totalWithdrawn", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getMyMiners", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "getMyEggs", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [{ "internalType": "address", "name": "adr", "type": "address" }], "name": "getEggsSinceLastHatch", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function", "constant": true }, { "inputs": [], "name": "ENABLE_LOTTERY", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "DISABLE_LOTTERY", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "value", "type": "address" }], "name": "CHANGE_OWNERSHIP", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "value", "type": "address" }], "name": "CHANGE_PROJECT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "value", "type": "address" }], "name": "CHANGE_PARTNER", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "value", "type": "address" }], "name": "CHANGE_MARKETING", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_EGGS_TO_HIRE_1MINERS", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_PROJECT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_PARTNER", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_MARKETING", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_REFERRAL", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "PRC_MARKET_EGGS_DIVISOR", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_WITHDRAWAL_TAX", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_WITHDRAW_DAYS_TAX", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "BONUS_DAILY_COMPOUND", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "BONUS_DAILY_COMPOUND_BONUS_MAX_TIMES", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "BONUS_COMPOUND_STEP", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_LOTTERY_STEP", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_LOTTERY_PERCENT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_LOTTERY_MAX_DEPOSITOR_PERCENT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_LOTTERY_TICKET_PRICE", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_MAX_LOTTERY_TICKET_COMPOUND", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_MAX_LOTTERY_TICKET_DEPOSIT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_INVEST_MIN", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_CUTOFF_STEP", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_WITHDRAW_COOLDOWN", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_WITHDRAW_LIMIT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "SET_WALLET_DEPOSIT_LIMIT", "outputs": [], "stateMutability": "nonpayable", "type": "function" }]

//smartcontract objects
const MATIC_MINER_CONTRACT = "0xf08665261ef76E56e732c711330e905020E445DA"
const AVAX_MINER_CONTRACT = "0x0c01328A0D8E996433Dd9720F40D896089eb966D"
const FTM_MINER_CONTRACT = "0x69e7D335E8Da617E692d7379e03FEf74ef295899"
const SPELL_MINER_CONTRACT = "0x7BaE1b65105eD76dC9F14f3b541003829782E60f"
const TOMB_MINER_CONTRACT = "0x43c12d45Ce42ec3CC24D4fD7e8Dba87f69ECCEcB"
const POLYGON_USDC_MINER_CONTRACT = "0xFF53b9822E114c0AE46cBdE4F7b4C642f8F9bbAA"
const TOASTED_AVAX_CONTRACT = "0x1765e75bbF6cE8C43a13eD91C032A137d102f4d4";
const BAKED_BEANS_BNB_CONTRACT = "0xE2D26507981A4dAaaA8040bae1846C14E0Fb56bF";
const ELK_OF_FORTUNE_MINER_CONTRACT = "0xc36d17085b26fc5dCBBB46A6A2068b3AdE2CdAb5"

//symbols for rewards.txt, could prob simplify this
const multiMinerTokens = ['MATICw3', 'USDC', 'MATICw2', 'AVAX', 'FTM', 'SPELL', 'TOMB'];
const bakeHouseTokens = ['AVAX', 'BNB'];
const fortuneHunersTokens = ['ELK'];
const multiMiner = [
	new ethers.Contract(MATIC_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[0]),
	new ethers.Contract(POLYGON_USDC_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[0]),
	new ethers.Contract(MATIC_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[1]),
	new ethers.Contract(AVAX_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[2]),
	new ethers.Contract(FTM_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[3]),
	new ethers.Contract(SPELL_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[3]),
	new ethers.Contract(TOMB_MINER_CONTRACT, MULTI_MINER_ABI, ethersWallet[3])
];
const bakeHouse = [
	new ethers.Contract(TOASTED_AVAX_CONTRACT, TOASTED_AVAX_ABI, ethersWallet[2]),
	new ethers.Contract(BAKED_BEANS_BNB_CONTRACT, BAKED_BEANS_ABI, ethersWallet[4])
];
const fortuneHunters = [
	new ethers.Contract(ELK_OF_FORTUNE_MINER_CONTRACT, ELK_OF_FORTUNE_ABI, ethersWallet[4])
]

//token addresses and contracts
const usdcToken = "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174";
const spellToken = "0x468003b688943977e6130f4f68f23aad939a1040";
const tombToken = "0x6c021ae822bea943b2e66552bde1d2696a53fbb7";
const elkToken = "0xeEeEEb57642040bE42185f49C52F7E9B38f8eeeE";
const usdcContract = new ethers.Contract(usdcToken, abi, maticRPC);
const spellContract = new ethers.Contract(spellToken, abi, ftmRPC);
const tombContract = new ethers.Contract(tombToken, abi, ftmRPC);
const elkContract = new ethers.Contract(elkToken, abi, bnbRPC);

const dateObject = new Date();
//providers and contracts to get balances
const balanceArr = [
	maticRPC,
	bnbRPC,
	avaxRPC,
	ftmRPC,
	usdcContract,
	spellContract,
	tombContract,
	elkContract
]
const walletArr = [
	ethersWallet[0].address,
	ethersWallet[1].address
]
iBalance = []; oBalance = []; rBalance = [];

async function main() {
	/*
	keep daily record of unclaimed rewards
	probably a way to code this with less code
	*/
	rewards1 = []; rewards2 = []; rewards3 = [];
	rewards1 = await minerHelper.getAllUnclaimedRewards(bakeHouse, bakeHouseTokens, 'BakeHouse');
	rewards2 = await minerHelper.getAllUnclaimedRewards(multiMiner, multiMinerTokens, 'MultiMiner');
	rewards3 = await minerHelper.getAllUnclaimedRewards(fortuneHunters, fortuneHunersTokens, 'FortuneHunters');
	rewards = rewards1.concat(rewards2, rewards3);
	await SaveData('rewards.txt', rewards);
	/*
	store initial balances
	*/
	iBalance = await etherHelper.formatBalances(balanceArr, walletArr);
	/*
	copy iBalance to iBalanceFormat, not necessary as is
	could decrease iterations using regex and array.split()
	to remove formatting but fuck regex
	*/
	iBalanceFormat = iBalance.map((x) => x);
	await SaveData('balance.txt', iBalanceFormat);
	/*
	empty iBalance array, may or maynot be necessary
	*/
	iBalance.forEach((i) => {
		iBalance.pop();
	})
	/*
	hold initial balances, without formatting, to compare later
	 */
	iBalance = await etherHelper.getAllBalances(balanceArr, walletArr);
	/*
	alternate days compound and pocket of multichain miner //sunday=0
	*/

	if ((dateObject.getDay() % 2) == 0) {
		for (let i = 0; i < multiMiner.length; i++) {
			await minerHelper.Compound(multiMiner[i], multiMinerTokens[i]);
		}
	} else {
		for (let i = 0; i < multiMiner.length; i++) {
			await minerHelper.Sell(multiMiner[i], multiMinerTokens[i]);
		}
	}
	//	bakedbeans and toastedavax sell friday, compound other days   

	if (dateObject.getDay() == 5) {
		for (let i = 0; i < bakeHouse.length; i++) {
			await minerHelper.Sell(bakeHouse[i], bakeHouseTokens[i]);
		}
	} else {
		for (let i = 0; i < bakeHouse.length; i++) {
			await minerHelper.Compound(bakeHouse[i], bakeHouseTokens[i]);
		}
	}
	//fortune hunters sell 1st and 15th of month, compound others
	if (dateObject.getDay() === 0 || dateObject.getDay() === 14) {
		for (let i = 0; i < fortuneHunters.length; i++) {
			await minerHelper.Sell(fortuneHunters[i], fortuneHunersTokens[i]);
		}
	} else {
		var t = await minerHelper.multiRewards(fortuneHunters[0], fortuneHunters[0].signer.address);
		t = await minerHelper.MakeReadable(t);
		if (t > 15) { //only if atleast 15 elk available for lotto
			for (let i = 0; i < fortuneHunters.length; i++) {
				await minerHelper.Compound(fortuneHunters[i], fortuneHunersTokens[i]);
			}
		}
	}

	/*
	keep daily of record change in wallet balances
	cause javascript is gay doesnt provide method for removing from
	array at index.
	needed to define in main() because undefined error...
	Array.prototype.method caused issues elsewhere because gayness
	*/
	iBalanceFormat.removeByValue = function rBV(val) {
		for (var i = 0; i < this.length; i++) {
			if (!(RegExp(val).test(this[i]))) { //return true if not regex match
				this.splice(i, 1);
				i--;
			}
		}
		return this;
	}
	/*
	create remove extra lines from iBalanceFormat to get symbol data 
	cause blockchains dont play nice
	*/
	iBalanceFormat.removeByValue(/.+?(?=:)/);
	/*
	record difference in balance to see gains(and gasfee if compounding)
	regex looks for data preceding :, then concat difference
	*/
	oBalance = await etherHelper.getAllBalances(balanceArr, walletArr)
	for (var i in oBalance) {
		var t = parseFloat(oBalance[i] - iBalance[i]);
		t = (iBalanceFormat[i].match(/.+?(?=:)/)) + ': ' + t;
		rBalance.push(t);
	}
	SaveData('pnl.txt', rBalance);

	etherHelper.WaitForUser();
}
main();
/* 
start with timestamp as string, concat string with each element of array
then save string to file
*/
async function SaveData(file, tempStr) {
	var str = '\n' + dateObject.getFullYear() + ':' + (dateObject.getMonth() + 1) + ':' + dateObject.getDate() + '\n\t';
	tempStr.forEach((item) => {
		str = str + item + '\n\t';
	});
	etherHelper.AppendFile(file, str);
}

